В протоколе WebSocket данные передаются с использованием последовательности кадров. Чтобы избежать путаницы сетевых посредников (таких как перехват прокси-серверов) и по соображениям безопасности, которые далее обсуждаются в разделе 10.3, клиент ДОЛЖЕН маскировать все фреймы, которые он отправляет на сервер (более подробную информацию смотрите в разделе 5.3). (Обратите внимание, что маскировка выполняется независимо от того, запущен протокол WebSocket или нет по протоколу TLS.) Сервер ДОЛЖЕН закрыть соединение при получении фрейма, который не замаскирован. В этом случае сервер МОЖЕТ отправить сообщение о закрытии кадр с кодом состояния 1002 (ошибка протокола), как определено в Раздел 7.4.1. Сервер НЕ ДОЛЖЕН маскировать какие-либо фреймы, которые он отправляет клиенту. Клиент ДОЛЖЕН закрыть соединение, если он обнаруживает замаскированный кадр. В этом случае он МОЖЕТ использовать код состояния 1002 (протокол ошибка), как определено в разделе 7.4.1. (Эти правила могут быть смягчены в будущей спецификации.)

Базовый протокол кадрирования определяет тип кадра с кодом операции (opcode), длиной полезной нагрузки (payload length) и назначенными местоположениями для "дополнительных данных" (Extension data) и "Данные приложения" (Application data), которые вместе определяют "Данные полезной нагрузки" (Payload data). Определенные биты и коды операций зарезервированы для будущего расширения протокола.

Кадр данных МОЖЕТ быть передан либо клиентом, либо сервером в любое время после завершения подтверждения открытия и до этой конечной точки отправил закрытый кадр (Close frame) (раздел 5.5.1).

